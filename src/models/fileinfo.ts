/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type FileInfo = {
  /**
   * Whether this is a directory
   */
  isDir: boolean;
  /**
   * Last modified timestamp (Unix time)
   */
  modified: number;
  /**
   * File name
   */
  name: string;
  /**
   * File size in bytes
   */
  size: number;
  /**
   * Static URL to access the file
   */
  url: string;
};

/** @internal */
export const FileInfo$inboundSchema: z.ZodType<
  FileInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  isDir: z.boolean(),
  modified: z.number().int(),
  name: z.string(),
  size: z.number().int(),
  url: z.string(),
});

/** @internal */
export type FileInfo$Outbound = {
  isDir: boolean;
  modified: number;
  name: string;
  size: number;
  url: string;
};

/** @internal */
export const FileInfo$outboundSchema: z.ZodType<
  FileInfo$Outbound,
  z.ZodTypeDef,
  FileInfo
> = z.object({
  isDir: z.boolean(),
  modified: z.number().int(),
  name: z.string(),
  size: z.number().int(),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileInfo$ {
  /** @deprecated use `FileInfo$inboundSchema` instead. */
  export const inboundSchema = FileInfo$inboundSchema;
  /** @deprecated use `FileInfo$outboundSchema` instead. */
  export const outboundSchema = FileInfo$outboundSchema;
  /** @deprecated use `FileInfo$Outbound` instead. */
  export type Outbound = FileInfo$Outbound;
}

export function fileInfoToJSON(fileInfo: FileInfo): string {
  return JSON.stringify(FileInfo$outboundSchema.parse(fileInfo));
}

export function fileInfoFromJSON(
  jsonString: string,
): SafeParseResult<FileInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FileInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FileInfo' from JSON`,
  );
}
