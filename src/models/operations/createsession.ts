/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateSessionRequest = {
  /**
   * Title for the session
   */
  title: string;
  /**
   * Optional working directory path
   */
  workingDirectory?: string | undefined;
};

/** @internal */
export const CreateSessionRequest$inboundSchema: z.ZodType<
  CreateSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.string(),
  workingDirectory: z.string().optional(),
});

/** @internal */
export type CreateSessionRequest$Outbound = {
  title: string;
  workingDirectory?: string | undefined;
};

/** @internal */
export const CreateSessionRequest$outboundSchema: z.ZodType<
  CreateSessionRequest$Outbound,
  z.ZodTypeDef,
  CreateSessionRequest
> = z.object({
  title: z.string(),
  workingDirectory: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSessionRequest$ {
  /** @deprecated use `CreateSessionRequest$inboundSchema` instead. */
  export const inboundSchema = CreateSessionRequest$inboundSchema;
  /** @deprecated use `CreateSessionRequest$outboundSchema` instead. */
  export const outboundSchema = CreateSessionRequest$outboundSchema;
  /** @deprecated use `CreateSessionRequest$Outbound` instead. */
  export type Outbound = CreateSessionRequest$Outbound;
}

export function createSessionRequestToJSON(
  createSessionRequest: CreateSessionRequest,
): string {
  return JSON.stringify(
    CreateSessionRequest$outboundSchema.parse(createSessionRequest),
  );
}

export function createSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSessionRequest' from JSON`,
  );
}
