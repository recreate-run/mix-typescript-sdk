/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Authentication URL
 */
export type InitiateOAuthLoginResponse = {
  /**
   * OAuth authorization URL
   */
  authUrl?: string | undefined;
};

/** @internal */
export const InitiateOAuthLoginResponse$inboundSchema: z.ZodType<
  InitiateOAuthLoginResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  authUrl: z.string().optional(),
});

/** @internal */
export type InitiateOAuthLoginResponse$Outbound = {
  authUrl?: string | undefined;
};

/** @internal */
export const InitiateOAuthLoginResponse$outboundSchema: z.ZodType<
  InitiateOAuthLoginResponse$Outbound,
  z.ZodTypeDef,
  InitiateOAuthLoginResponse
> = z.object({
  authUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateOAuthLoginResponse$ {
  /** @deprecated use `InitiateOAuthLoginResponse$inboundSchema` instead. */
  export const inboundSchema = InitiateOAuthLoginResponse$inboundSchema;
  /** @deprecated use `InitiateOAuthLoginResponse$outboundSchema` instead. */
  export const outboundSchema = InitiateOAuthLoginResponse$outboundSchema;
  /** @deprecated use `InitiateOAuthLoginResponse$Outbound` instead. */
  export type Outbound = InitiateOAuthLoginResponse$Outbound;
}

export function initiateOAuthLoginResponseToJSON(
  initiateOAuthLoginResponse: InitiateOAuthLoginResponse,
): string {
  return JSON.stringify(
    InitiateOAuthLoginResponse$outboundSchema.parse(initiateOAuthLoginResponse),
  );
}

export function initiateOAuthLoginResponseFromJSON(
  jsonString: string,
): SafeParseResult<InitiateOAuthLoginResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateOAuthLoginResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateOAuthLoginResponse' from JSON`,
  );
}
