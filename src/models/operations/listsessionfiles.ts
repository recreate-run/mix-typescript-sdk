/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListSessionFilesRequest = {
  /**
   * Session ID
   */
  id: string;
};

/** @internal */
export const ListSessionFilesRequest$inboundSchema: z.ZodType<
  ListSessionFilesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ListSessionFilesRequest$Outbound = {
  id: string;
};

/** @internal */
export const ListSessionFilesRequest$outboundSchema: z.ZodType<
  ListSessionFilesRequest$Outbound,
  z.ZodTypeDef,
  ListSessionFilesRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListSessionFilesRequest$ {
  /** @deprecated use `ListSessionFilesRequest$inboundSchema` instead. */
  export const inboundSchema = ListSessionFilesRequest$inboundSchema;
  /** @deprecated use `ListSessionFilesRequest$outboundSchema` instead. */
  export const outboundSchema = ListSessionFilesRequest$outboundSchema;
  /** @deprecated use `ListSessionFilesRequest$Outbound` instead. */
  export type Outbound = ListSessionFilesRequest$Outbound;
}

export function listSessionFilesRequestToJSON(
  listSessionFilesRequest: ListSessionFilesRequest,
): string {
  return JSON.stringify(
    ListSessionFilesRequest$outboundSchema.parse(listSessionFilesRequest),
  );
}

export function listSessionFilesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListSessionFilesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListSessionFilesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListSessionFilesRequest' from JSON`,
  );
}
