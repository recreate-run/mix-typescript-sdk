/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { authenticationGetOAuthHealth } from "../funcs/authenticationGetOAuthHealth.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Health extends ClientSDK {
  /**
   * Get OAuth authentication health
   *
   * @remarks
   * Get health status of all OAuth credentials including expiry information. Health statuses: 'healthy' (all tokens valid), 'degraded' (some tokens expired but refreshable), 'unhealthy' (tokens expired without refresh capability)
   */
  async getOAuthHealth(
    options?: RequestOptions,
  ): Promise<operations.GetOAuthHealthResponse> {
    return unwrapAsync(authenticationGetOAuthHealth(
      this,
      options,
    ));
  }
}
