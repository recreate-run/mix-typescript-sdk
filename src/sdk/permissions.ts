/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { permissionsDeny } from "../funcs/permissionsDeny.js";
import { permissionsGrant } from "../funcs/permissionsGrant.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Permissions extends ClientSDK {
  /**
   * Deny permission
   *
   * @remarks
   * Deny a specific permission
   */
  async deny(
    request: operations.DenyPermissionRequest,
    options?: RequestOptions,
  ): Promise<operations.DenyPermissionResponse> {
    return unwrapAsync(permissionsDeny(
      this,
      request,
      options,
    ));
  }

  /**
   * Grant permission
   *
   * @remarks
   * Grant a specific permission
   */
  async grant(
    request: operations.GrantPermissionRequest,
    options?: RequestOptions,
  ): Promise<operations.GrantPermissionResponse> {
    return unwrapAsync(permissionsGrant(
      this,
      request,
      options,
    ));
  }
}
