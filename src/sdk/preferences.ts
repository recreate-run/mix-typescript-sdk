/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { preferencesGetAvailableProviders } from "../funcs/preferencesGetAvailableProviders.js";
import { preferencesGetPreferences } from "../funcs/preferencesGetPreferences.js";
import { preferencesResetPreferences } from "../funcs/preferencesResetPreferences.js";
import { preferencesUpdatePreferences } from "../funcs/preferencesUpdatePreferences.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Preferences extends ClientSDK {
  /**
   * Get user preferences
   *
   * @remarks
   * Retrieve current user preferences including model and provider settings
   */
  async getPreferences(
    options?: RequestOptions,
  ): Promise<operations.GetPreferencesResponse> {
    return unwrapAsync(preferencesGetPreferences(
      this,
      options,
    ));
  }

  /**
   * Update user preferences
   *
   * @remarks
   * Update user preferences including model and provider settings
   */
  async updatePreferences(
    request: operations.UpdatePreferencesRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdatePreferencesResponse> {
    return unwrapAsync(preferencesUpdatePreferences(
      this,
      request,
      options,
    ));
  }

  /**
   * Get available providers
   *
   * @remarks
   * Retrieve list of available AI providers and their supported models
   */
  async getAvailableProviders(
    options?: RequestOptions,
  ): Promise<{ [k: string]: operations.GetAvailableProvidersResponse }> {
    return unwrapAsync(preferencesGetAvailableProviders(
      this,
      options,
    ));
  }

  /**
   * Reset preferences
   *
   * @remarks
   * Reset user preferences to default values
   */
  async resetPreferences(
    options?: RequestOptions,
  ): Promise<operations.ResetPreferencesResponse> {
    return unwrapAsync(preferencesResetPreferences(
      this,
      options,
    ));
  }
}
